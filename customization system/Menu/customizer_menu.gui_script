local TouchFb = require("modules.animation")
local Customizer = require("modules.customizer")

function init(self)
	local col_name = "customizer_menu"
	msg.post(".", "acquire_input_focus")
	local nodes = {"heading", "_menu", "_menucol", "_upgradescol", "_levelcol", "_colormenucol", "_pickcolorscol", "_pausecol", "_gameovercol", 
	"_choosecol", "_palettecol", "_promptcol", "_canvascol", "_customizercol"}
	-- node each node to its appropriate color
	for k, v in ipairs(nodes) do
		Customizer.set_node_color(v, col_name)
	end
end

function final(self)
	msg.post('.', 'release_input_focus')
end

function on_message(self, message_id, message, sender)

end

local button_tapped
local handle_input = function()
	if button_tapped == "_menu" then
		--load the menu
		msg.post(main, "unload_customizer")
	elseif button_tapped == "_menucol" then
		--load the menu shell
		msg.post(customizer_controller, "load_menu_shell")
	elseif button_tapped == "_upgradescol" then
		--load the shop shell
		msg.post(customizer_controller, "load_upgrades_shell")
	elseif button_tapped == "_levelcol" then
		--load the level shell
		msg.post(customizer_controller, "load_level_shell")
	elseif button_tapped == "_colormenucol" then
		--load the color menu shell
		msg.post(customizer_controller, "load_color_menu_shell")
	elseif button_tapped == "_pickcolorscol" then
		--load the pick colors shell
		msg.post(customizer_controller, "load_pick_colors_shell")
	elseif button_tapped == "_pausecol" then
		--load the pause shell
		msg.post(customizer_controller, "load_pause_shell")
	elseif button_tapped == "_gameovercol" then
		--load the gameover shell
		msg.post(customizer_controller, "load_gameover_shell")	
	elseif button_tapped == "_choosecol" then
		--load the color options shell
		msg.post(customizer_controller, "load_color_options_shell")
	elseif button_tapped == "_palettecol" then
		--load the palette shell
		msg.post(customizer_controller, "load_palette_shell")
	elseif button_tapped == "_promptcol" then
		--load the prompt shell
		msg.post(customizer_controller, "load_prompt_shell")
	elseif button_tapped == "_canvascol" then
		--load the canvas shell
		msg.post(customizer_controller, "load_canvas_shell")
	elseif button_tapped == "_customizercol" then
		--load the color menu shell
		msg.post(customizer_controller, "load_customizer_menu_shell")
	end
end

function on_input(self, action_id, action)
	local nodes = {"_menu", "_menucol", "_upgradescol", "_levelcol", "_colormenucol", "_pickcolorscol", "_pausecol", "_gameovercol", 
	"_choosecol", "_palettecol", "_promptcol", "_canvascol", "_customizercol"}
	local touch = hash("touch")
	local back = hash('back')
	if action_id == touch and action.released then
		local random = gui.get_node("_random")
		if gui.pick_node(random, action.x, action.y) then
			button_tapped = nodes[math.random(2, #nodes)]
			TouchFb.touch_feedback(random, handle_input)
		else
			for k, v in ipairs(nodes) do
				local node = gui.get_node(v)
				if gui.pick_node(node, action.x, action.y) then
					button_tapped = v
					TouchFb.touch_feedback(node, handle_input)
				end
			end
		end
	elseif action_id == back and action.released then
		msg.post(main, "click")
		button_tapped = "_menu"
		handle_input()
	end
end